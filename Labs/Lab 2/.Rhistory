install.packages("tidyverse")
install.packages("gapminder")
exit
exit()
install.packages("tidyverse")
library(dplyr)
pnorm(6/5)
1 - pnorm(6/5)
32-77
-45/5
pnorm(-9)
Book <- c('a','b')
RemoveBook <- function(Book, index)
{
}
Book
Book'[0]'
Book[0]'
Book[0]
Book[``]
Book(0)
print(Book[0])
print(Book)
print(Book[1])
print(Book[2])
Book <- c('a','b','c','d','e','f')
RemoveBook <- function(Book, index)
{
}
RemoveBook <- function(Book, index)
{
Book <- Book(!Book in index)
}
RemoveBook(Book,3)
RemoveBook <- function(Book, index)
{
Book <- Book(!Book != Book[index``])
}
RemoveBook(Book,3)
print(RemoveBook(Book,3))
RemoveBook <- function(Book, index)
{
Book <- Book(Book != Book[index``])
}
print(RemoveBook(Book,3))
x <- ('1','2')
x <- c('1','2')
x
remove(x[1])
squares <- (1,4,9,16,24)
squares <- c(1,4,9,16,24)
sqrt(sqaures)
sqrt(squares)
numebrs <- 1:200
numbers <- 1:200
numbers
round(numbers)
roundn <- round(numbers)
squartn <- sqrt(numbers)
roundn
squartn
squartn == roundn
int(library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
int(library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
int(squartn)
integer(squartn)
integer(squartn)
round(squartn)
as.integer(squartn)
x = 9.00
round(x)
x == round(x)
numbers
round(numbers)
sqrt(numbers)
round(squartn(numbers))
round(squartn)
sqrt(numbers) == round(squartn)
f <- (sqrt(numbers) == round(squartn))
f
which(f == TRUE)
numbers <- 1:201
numbers
root <- sqrt(numbers)
roundnum <- rounf(root)
roundnum <- round(root)
round
roundnum
positions <- (roundnum == root)
positions
which(positions == TRUE)
numbers <- 1:201
root <- sqrt(numbers)
round_root <- round(root)
positions <- (round_root == root)
squares <- which(positions == TRUE)
squares
as.Date("2018-01-19")
as.Date("2018-01-19")
spring.break <- as.Date("03/17/18","%m/%d/%y")
spring.break
spring.break
spring.break <- as.Date("03/17/95","%m/%d/%y")
spring.break
Sys.Date()
current <- Sys.Date()
current - spring.break
(current - spring.break)365
(current - spring.break)/365
(current - spring.break)
data <- read.csv("ratings.csv", stringsAsFactors=FALSE)
#Set the working directory
setwd("C:/Users/iGuest/Desktop/University of Washington/Quarter 2/INFX 573/Labs/Lab 2")
dim(data)
#Read the data
data <- read.csv("ratings.csv", stringsAsFactors=FALSE)
dim(data)
View(data)
View(data)
summary(data)
head(data)
dim(data)
sd(data$rating)
temp<-merge(ratings, movies, by="movieId")
#Prem Shah
#Lab2_INFX 573
#Import libraries
library(dplyr)
library(ggplot2)
#Set the working directory
setwd("C:/Users/iGuest/Desktop/University of Washington/Quarter 2/INFX 573/Labs/Lab 2")
#Read the data
ratings <- read.csv("ratings.csv", stringsAsFactors=FALSE)
movies <- read.csv("movie.titles.csv", stringsAsFactors=FALSE)
#There are 100004 ratings in the dataset with 671 unique users (raters)
dim(ratings)
#The mean of ratings is 3.544, median is 4.000, standard deviation is 1.058064
summary(ratings)
sd(ratings$rating)
temp<-merge(ratings, movies, by="movieId")
View(temp)
View(temp)
#Plotting a histogram of the ratings
ggplot(data, aes(x = ratings$rating)) + geom_histogram()
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_point()
plot(seatbelts[,"kms"], seatbelts[,"drivers"], type = "h")
x <- matric([NA NA NA NA],2,2)
x <- matrix([NA NA NA NA],2,2)
x <- function(3,4)
x <- function(3,4){}
x <- function(a,b){}
x <- function(a,b){sum = a+b}
x <- function(a,b){sum = a+b
sqr = sum*sum}
x
x(3,4)
print(x(3,4))
x <- function(a,b){sum = a+b
sqr = sum*sum
return sqr}
x <- function(a,b){sum = a+b
sqr = sum*sum
return(sqr)}
x
print(x(3,4))
x(3,4)
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_point()
plot(ratings$rating, ratings$year, type = "p")
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
#plot(ratings$rating, ratings$year, type = "p")
ratings$comedy <-rep(F, nrow=ratings)
ratings$comedy[grep("comedy",ratings$genre, ignore.case = T)] <-T
print(ratings$comedy[grep("comedy",ratings$genre, ignore.case = T)] <-T)
ratings$comedy
ratings$comedy <- rep(F, nrow=ratings)
ratings$comedy
print(ratings$comedy[grep("comedy",ratings$genre, ignore.case = T)] <-T)
ratings$comedy[grep("comedy",ratings$genre, ignore.case = T)] <-T
rep(F, nrow=ratings)
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
ggplot(data, aes(x = ratings$comedy)) + geom_boxplot()
ggplot(data, aes(x = ratings$comedy, y = ratings$rating)) + geom_boxplot()
boxplot(ratings$comedy, ratings$rating)
#Plotting a histogram of the ratings
#We can observe that people seem to prefer round numbers
ggplot(data, aes(x = ratings$rating)) + geom_histogram()
ggplot(data, aes(x = ratings$comedy, y = ratings$rating)) + geom_boxplot()
boxplot(ratings$comedy, ratings$rating)
ggplot(data, aes(x = ratings$comedy, y = ratings$rating)) + geom_boxplot()
boxplot(ratings$comedy, ratings$rating)
ggplot(data, aes(x = ratings$comedy, y = ratings$rating)) + geom_boxplot()
ratings$comedy
boxplot(ratings$comedy, ratings$rating)
boxplot(rating ~ comedy, data = ratings)
boxplot(ratings$rating, ratings$comedy)
View(temp)
View(temp)
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_point()
plot(ratings$rating, ratings$year, type = "p")
#boxplot(ratings$rating, ratings$comedy)
boxplot(rating ~ comedy, data = ratings)
t.test(ratings$rating[ratings$comedy], ratings$ratings[!ratings$comedy])
ggplot(data, aes(x = ratings$rating[ratings$comedy], y = ratings$ratings[!ratings$comedy)) + geom_boxplot()
ggplot(data, aes(x = ratings$rating[ratings$comedy], y = ratings$ratings[!ratings$comedy]) + geom_boxplot()
ggplot(data, aes(x = ratings$rating[ratings$comedy], y = ratings$ratings[!ratings$comedy]) + geom_boxplot()
#PART 2:
rexp(1000)
boxplot(rating~year, data = ratings)
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
#PART 2:
hist(rexp(1000))
hist(rpois(1000), 0.5)
hist(rpois(1000,0.5))
hist(rexp(1000))
hist(runif(1000))
#PART 2:
hist(rexp(1000))
hist(runif(1000))
hist(rpois(1000,0.5))
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rexp(N)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
#In the below plot, we can see that it is a normal distribution
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-runif(N)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
#Prem Shah
#Lab2_INFX 573
#Import libraries
library(dplyr)
library(ggplot2)
#Set the working directory
setwd("C:/Users/iGuest/Desktop/University of Washington/Quarter 2/INFX 573/Labs/Lab 2")
#Read the data
ratings <- read.csv("ratings.csv", stringsAsFactors=FALSE)
movies <- read.csv("movie.titles.csv", stringsAsFactors=FALSE)
#There are 100004 ratings in the dataset with 671 unique users (raters)
dim(ratings)
#The mean of ratings is 3.544, median is 4.000, standard deviation is 1.058064
summary(ratings)
sd(ratings$rating)
#Plotting a histogram of the ratings
#We can observe that people seem to prefer round numbers
ggplot(data, aes(x = ratings$rating)) + geom_histogram()
#Merging the datasets
temp<-merge(ratings, movies, by="movieId")
#Plot relationships between rating and year
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_boxplot()
ggplot(data, aes(x = ratings$rating, y = ratings$year)) + geom_point()
#Extract the ones that are comedy movies
ratings$comedy <-rep(F, nrow=ratings)
ratings$comedy[grep("comedy",ratings$genre, ignore.case = T)] <-T
#Yes the ratings do vary by genre
ggplot(data, aes(x = ratings$comedy, y = ratings$rating)) + geom_boxplot()
#T-test
t.test(ratings$rating[ratings$comedy], ratings$ratings[!ratings$comedy])
#_________________________________________________________________________________________
#PART 2:
hist(rexp(1000))
hist(runif(1000))
hist(rpois(1000,0.5))
#In the below plot, we can see that it is a normal distribution for all the distributions, exponential,
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rexp(N)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-runif(N)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-300
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-3
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-100
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-10000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-300
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
N <-1000000
n.samp <-300
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-1000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-100
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
N <-10000
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
N <-100
n.samp <-30
M <-matrix(NA, nrow=N, ncol=n.samp)
for(j in 1:n.samp) M[,j] <-rpois(N,0.5)
hist(rowSums(M), freq = F)
curve(dnorm(x, mean(rowSums(M)), sd(rowSums(M))), min(rowSums(M)), max(rowSums(M)), add=T, col="red", lwd=2)
